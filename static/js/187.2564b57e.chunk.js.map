{"version":3,"file":"static/js/187.2564b57e.chunk.js","mappings":"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","sources":["redux/contacts & filter/selectors.js","components/ContactForm/ContactFormStyles.jsx","components/ContactForm/ContactForm.jsx","components/ContactAdd/ContactAdd.jsx","components/ContactUpdate/ContactUpdate.jsx","components/Modal/ModalStyles.jsx","components/Modal/Modal.jsx","components/ContactItem/ContactItemStyles.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactListStyles.jsx","components/ContactList/ContactList.jsx","components/Filter/FilterStyles.jsx","components/Filter/Filter.jsx","pages/ContactsStyles.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectItems = state => state.contacts.items;\nexport const selectFetchContactsIsLoading = state =>\n  state.contacts.isLoading.fetchContacts;\nexport const selectAddContactIsLoading = state =>\n  state.contacts.isLoading.addContact;\nexport const selectDeletedContactId = state =>\n  state.contacts.isLoading.deletedContactId;\nexport const selectUpdateContactIsLoading = state =>\n  state.contacts.isLoading.updateContact;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectItems, selectFilterValue],\n  (items, filter) => {\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  font-size: 18px;\n  line-height: 1.5;\n  margin: 0 auto;\n\n  @media only screen and (min-width: 1200px) {\n    max-width: 80%;\n  }\n`;\n\nconst Input = styled.input`\n  display: block;\n  min-width: 400px;\n  padding: 5px 10px;\n  font-size: 16px;\n  font-weight: inherit;\n  font-family: inherit;\n  color: inherit;\n  border: 1px solid #34345664;\n  border-radius: 12px;\n`;\n\nconst Button = styled.button`\n  display: block;\n  margin: 10px auto;\n  padding: 10px;\n  width: 170px;\n  font-size: 16px;\n  font-weight: inherit;\n  color: #e3e3ee;\n  text-align: center;\n  text-transform: uppercase;\n  cursor: pointer;\n  background-color: #383848;\n  border-radius: 12px;\n  border: none;\n  transition: box-shadow 0.1s, transform 0.1s;\n\n  &:hover {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n    transform: scale(1.02);\n  }\n`;\n\nexport { Form, Label, Input, Button };\n","import PropTypes from 'prop-types';\n\nimport Loader from '../Loader';\n\nimport { Form, Label, Input, Button } from './ContactFormStyles';\n\nconst ContactForm = ({\n  name,\n  number,\n  handleChange,\n  handleSubmit,\n  isLoading,\n  buttonText,\n}) => {\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"\">\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </Label>\n      <Label htmlFor=\"\">\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\">\n        {isLoading ? (\n          <Loader\n            height={'16'}\n            width={'16'}\n            colors={['#e3e3ee', '#e3e3ee']}\n            size={'s'}\n          />\n        ) : (\n          buttonText\n        )}\n      </Button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  buttonText: PropTypes.string.isRequired,\n};\n\nexport default ContactForm;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { addContact } from '../../redux/contacts & filter/operations';\nimport {\n  selectItems,\n  selectAddContactIsLoading,\n} from '../../redux/contacts & filter/selectors';\nimport ContactForm from '../ContactForm';\n\nconst ContactAdd = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectItems);\n  const isLoading = useSelector(selectAddContactIsLoading);\n  const [state, setState] = useState({ name: '', number: '' });\n  const { name, number } = state;\n  const buttonText = 'Add contact';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      items.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase().trim()\n      )\n    ) {\n      toast.warn(`${name} is already in your contacts`, {\n        position: 'top-right',\n        theme: 'colored',\n      });\n    } else if (items.some(contact => contact.number === number.trim())) {\n      toast.warn(`${number} is already in your contacts`, {\n        position: 'top-right',\n        theme: 'colored',\n      });\n    } else {\n      handleContactAddition();\n    }\n  };\n\n  const formReset = () => {\n    setState({ name: '', number: '' });\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    setState(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleContactAddition = async () => {\n    try {\n      await dispatch(addContact(state));\n      toast.success(`New contact \"${name}\" has been added successfully`, {\n        position: 'top-right',\n        theme: 'colored',\n      });\n      formReset();\n    } catch (rejectedValueOrSerializedError) {\n      console.log(rejectedValueOrSerializedError);\n    }\n  };\n\n  return (\n    <ContactForm\n      name={name}\n      number={number}\n      handleChange={handleChange}\n      handleSubmit={handleSubmit}\n      isLoading={isLoading}\n      buttonText={buttonText}\n    />\n  );\n};\n\nexport default ContactAdd;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { updateContact } from '../../redux/contacts & filter/operations';\nimport { selectUpdateContactIsLoading } from '../../redux/contacts & filter/selectors';\nimport ContactForm from '../ContactForm';\n\nconst ContactUpdate = ({ contactId, currentName, currentNumber, onSave }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectUpdateContactIsLoading);\n  const [state, setState] = useState({\n    id: contactId,\n    name: currentName,\n    number: currentNumber,\n  });\n  const { id, name, number } = state;\n  const buttonText = 'Update contact';\n  console.log(id);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleContactUpdate();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    setState(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleContactUpdate = async () => {\n    try {\n      await dispatch(updateContact(state));\n      toast.success(`Contact \"${name}\" has been updated successfully`, {\n        position: 'top-right',\n        theme: 'colored',\n      });\n      onSave();\n    } catch (rejectedValueOrSerializedError) {\n      console.log(rejectedValueOrSerializedError);\n    }\n  };\n\n  return (\n    <ContactForm\n      name={name}\n      number={number}\n      handleChange={handleChange}\n      handleSubmit={handleSubmit}\n      isLoading={isLoading}\n      buttonText={buttonText}\n    />\n  );\n};\n\nContactUpdate.propTypes = {\n  contactId: PropTypes.string.isRequired,\n  currentName: PropTypes.string.isRequired,\n  currentNumber: PropTypes.string.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n\nexport default ContactUpdate;\n","import styled from 'styled-components';\nimport image from '../../img/background/modal.jpg';\n\nconst Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nconst Content = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  max-width: 570px;\n  padding: 60px 0 40px;\n  width: 100%;\n  font-weight: 700;\n  background-image: linear-gradient(\n      to bottom,\n      rgb(210, 200, 200, 0.9),\n      rgb(215, 200, 200, 0.4)\n    ),\n    url(${image});\n  background-size: 100%;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  border-radius: 12px;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport { Backdrop, Content };\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { Backdrop, Content } from './ModalStyles';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <Content>{children}</Content>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\n\nconst Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-transform: uppercase;\n  gap: 10px;\n  padding: 5px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  border-radius: 12px;\n  transition: transform 0.1s;\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst Button = styled.button`\n  display: block;\n  width: 90px;\n  padding: 10px;\n  font-size: 16px;\n  font-weight: inherit;\n  color: #e3e3ee;\n  text-align: center;\n  text-transform: uppercase;\n  cursor: pointer;\n  background-color: #383848;\n  border-radius: 12px;\n  border: none;\n  transition: box-shadow 0.1s, transform 0.1s;\n\n  &:hover {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n    transform: scale(1.02);\n  }\n`;\n\nexport { Item, ButtonGroup, Button };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { deleteContact } from '../../redux/contacts & filter/operations';\nimport { selectDeletedContactId } from '../../redux/contacts & filter/selectors';\nimport ContactUpdate from 'components/ContactUpdate';\nimport Loader from '../Loader';\nimport Modal from '../Modal';\n\nimport { Item, ButtonGroup, Button } from './ContactItemStyles';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const deletedContactId = useSelector(selectDeletedContactId);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n\n  const handleContactDeletion = async () => {\n    try {\n      await dispatch(deleteContact(id));\n      toast.success(`Contact \"${name}\" has been deleted successfully`, {\n        position: 'top-right',\n        theme: 'colored',\n      });\n    } catch (rejectedValueOrSerializedError) {\n      console.log(rejectedValueOrSerializedError);\n    }\n  };\n\n  return (\n    <>\n      <Item>\n        <p>\n          {name}: {number}\n        </p>\n        <ButtonGroup>\n          <Button type=\"button\" onClick={toggleModal}>\n            Update\n          </Button>\n          <Button type=\"button\" onClick={handleContactDeletion}>\n            {deletedContactId === id ? (\n              <Loader\n                height={'16'}\n                width={'16'}\n                colors={['#e3e3ee', '#e3e3ee']}\n                size={'s'}\n              />\n            ) : (\n              'Delete'\n            )}\n          </Button>\n        </ButtonGroup>\n      </Item>\n      {isModalOpen && (\n        <Modal onClose={toggleModal}>\n          <ContactUpdate\n            contactId={id}\n            currentName={name}\n            currentNumber={number}\n            onSave={toggleModal}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 20px;\n\n  @media only screen and (min-width: 1200px) {\n    width: 50%;\n  }\n`;\n\nexport { Wrapper };\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  selectFetchContactsIsLoading,\n  selectError,\n  selectFilteredContacts,\n} from '../../redux/contacts & filter/selectors';\nimport { fetchContacts } from '../../redux/contacts & filter/operations';\nimport ContactItem from '../ContactItem';\nimport Loader from '../Loader';\n\nimport { Wrapper } from './ContactListStyles';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectFetchContactsIsLoading);\n  const error = useSelector(selectError);\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Wrapper>\n        {isLoading && !error && (\n          <Loader\n            height={'60'}\n            width={'60'}\n            colors={['#383848', '#383848']}\n            size={'m'}\n          />\n        )}\n        {filteredContacts.length > 0 &&\n          filteredContacts.map(contact => (\n            <ContactItem\n              key={contact.id}\n              id={contact.id}\n              name={contact.name}\n              number={contact.number}\n            />\n          ))}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  font-size: 18px;\n  line-height: 1.5;\n  margin: 0 auto;\n\n  @media only screen and (min-width: 1200px) {\n    max-width: 80%;\n  }\n`;\nconst Input = styled.input`\n  display: block;\n  min-width: 400px;\n  padding: 5px 10px;\n  font-size: 16px;\n  font-weight: inherit;\n  font-family: inherit;\n  color: inherit;\n  border: 1px solid #34345664;\n  border-radius: 12px;\n`;\n\nexport { Form, Label, Input };\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setFilter } from '../../redux/contacts & filter/filterSlice';\nimport { selectFilterValue } from '../../redux/contacts & filter/selectors';\n\nimport { Form, Label, Input } from './FilterStyles';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterValue);\n\n  const handleChange = e => {\n    const { value } = e.currentTarget;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <Form>\n      <Label>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleChange}\n        />\n      </Label>\n    </Form>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\nimport image from '../img/background/contacts-page.jpg';\n\nconst Section = styled.section`\n  display: block;\n  min-height: calc(95vh);\n  font-weight: 700;\n  background-image: linear-gradient(\n      to left,\n      rgb(210, 200, 200, 0.9),\n      rgb(215, 200, 200, 0.5)\n    ),\n    url(${image});\n  background-size: 100%;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  padding-top: 20px;\n  justify-content: center;\n\n  @media only screen and (max-width: 1199px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst Container = styled.div`\n  @media only screen and (min-width: 1200px) {\n    width: 50%;\n  }\n`;\n\nconst Title = styled.h1`\n  padding-top: 1em;\n  text-align: center;\n  font-size: 34px;\n  line-height: 1.33;\n`;\n\nexport { Section, Wrapper, Container, Title };\n","import ContactAdd from '../components/ContactAdd';\nimport ContactList from '../components/ContactList';\nimport Filter from '../components/Filter';\n\nimport { Section, Wrapper, Container, Title } from './ContactsStyles';\n\nconst Contacts = () => {\n  return (\n    <Section>\n      <Title>Contacts</Title>\n      <Wrapper>\n        <Container>\n          <ContactAdd />\n          <Filter />\n        </Container>\n        <ContactList />\n      </Wrapper>\n    </Section>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectItems","state","contacts","items","selectFetchContactsIsLoading","isLoading","fetchContacts","selectAddContactIsLoading","addContact","selectDeletedContactId","deletedContactId","selectUpdateContactIsLoading","updateContact","selectError","error","selectFilterValue","filter","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","_ref","number","handleChange","handleSubmit","buttonText","_jsxs","onSubmit","children","htmlFor","_jsx","type","pattern","title","required","value","onChange","Loader","height","width","colors","size","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setState","handleContactAddition","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","toast","concat","position","theme","t0","console","log","stop","apply","arguments","ContactForm","e","_e$currentTarget","currentTarget","prevState","_objectSpread","_defineProperty","preventDefault","some","trim","contactId","currentName","currentNumber","onSave","id","handleContactUpdate","_ref2","Backdrop","Content","image","modalRoot","document","querySelector","onClose","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","onClick","event","target","Item","ButtonGroup","isModalOpen","setIsModalOpen","toggleModal","handleContactDeletion","deleteContact","_Fragment","Modal","ContactUpdate","Wrapper","filteredContacts","length","map","ContactItem","setFilter","Section","Container","Title","ContactAdd","Filter","ContactList"],"sourceRoot":""}