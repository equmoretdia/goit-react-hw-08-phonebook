{"version":3,"file":"static/js/250.5c14728a.chunk.js","mappings":"0UAEMA,EAAOC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qEAMlBC,EAAQH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2FAOpBG,EAAQL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wOAapBK,EAASP,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4Z,UCqD5B,EAvEkB,WAChB,IAAMO,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAChCC,GAA0BC,EAAAA,EAAAA,UAAS,CAAEC,MAAO,GAAIC,SAAU,KAAKC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAxDM,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACdF,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SAOTK,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAEE,cAAlBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACdN,GAAS,SAAAO,GAAS,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAS,IAAAE,EAAAA,EAAAA,GAAA,GAAGJ,EAAOC,GAAK,GACtD,EAMMI,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEV7B,GAAS8B,EAAAA,EAAAA,IAAMnB,IAAQ,KAAD,EAAAgB,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAO5BK,QAAQC,IAAGN,EAAAI,IAAiC,wBAAAJ,EAAAO,OAAA,GAAAR,EAAA,kBAE/C,kBAXgB,OAAAH,EAAAY,MAAA,KAAAC,UAAA,KAajB,OACEC,EAAAA,EAAAA,MAAC/C,EAAI,CAACgD,SA5Ba,SAAAxB,GACnBA,EAAEyB,iBACFjB,GACF,EAyB+BkB,SAAA,EAC3BH,EAAAA,EAAAA,MAAC3C,EAAK,CAAA8C,SAAA,CAAC,SAELC,EAAAA,EAAAA,KAAC7C,EAAK,CACJ8C,KAAK,QACLzB,KAAK,QACL0B,UAAQ,EACRzB,MAAOX,EACPqC,SAAU/B,QAGdwB,EAAAA,EAAAA,MAAC3C,EAAK,CAAA8C,SAAA,CAAC,YAELC,EAAAA,EAAAA,KAAC7C,EAAK,CACJ8C,KAAK,WACLzB,KAAK,WACL0B,UAAQ,EACRzB,MAAOV,EACPoC,SAAU/B,QAGd4B,EAAAA,EAAAA,KAAC3C,EAAM,CAAC4C,KAAK,SAAQF,SAClBtC,GACCuC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACLC,OAAQ,KACRC,MAAO,KACPC,OAAQ,CAAC,UAAW,WACpBC,KAAM,MAGR,aAKV,E,yDC5EMC,EAAY3D,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kVASlB0D,GAOJC,EAAQ7D,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iGCNvB,EATc,WACZ,OACE4C,EAAAA,EAAAA,MAACa,EAAS,CAAAV,SAAA,EACRC,EAAAA,EAAAA,KAACW,EAAK,CAAAZ,SAAC,gBACPC,EAAAA,EAAAA,KAACY,EAAS,MAGhB,C","sources":["components/LoginForm/LoginFormStyles.jsx","components/LoginForm/LoginForm.jsx","pages/LoginStyles.jsx","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nconst Label = styled.label`\n  display: block;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n`;\n\nconst Input = styled.input`\n  display: block;\n  width: 30%;\n  min-width: 450px;\n  padding: 5px 10px;\n  font-size: 16px;\n  font-weight: inherit;\n  font-family: inherit;\n  color: inherit;\n  border: 1px solid #34345664;\n  border-radius: 12px;\n`;\n\nconst Button = styled.button`\n  display: block;\n  padding: 10px;\n  width: 120px;\n  font-size: 16px;\n  font-weight: 700;\n  color: #e3e3ee;\n  text-align: center;\n  text-transform: uppercase;\n  cursor: pointer;\n  background-color: #383848;\n  border-radius: 12px;\n  border: none;\n  transition: box-shadow 0.1s, transform 0.1s;\n\n  &:hover {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n    transform: scale(1.02);\n  }\n`;\n\nexport { Form, Label, Input, Button };\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { toast } from 'react-toastify';\n\nimport Loader from '../Loader';\nimport { logIn } from '../../redux/auth/operations';\nimport { selectIsLoggingIn } from '../../redux/auth/selectors';\n\nimport { Form, Label, Input, Button } from './LoginFormStyles';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const isLoggingIn = useSelector(selectIsLoggingIn);\n  const [state, setState] = useState({ email: '', password: '' });\n  const { email, password } = state;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleLogIn();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    setState(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  // const formReset = () => {\n  //   setState({ email: '', password: '' });\n  // };\n\n  const handleLogIn = async () => {\n    try {\n      await dispatch(logIn(state));\n      // toast.success('Welcome! You have been logged in successfully', {\n      //   position: 'top-right',\n      //   theme: 'colored',\n      // });\n      // formReset();\n    } catch (rejectedValueOrSerializedError) {\n      console.log(rejectedValueOrSerializedError);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Email\n        <Input\n          type=\"email\"\n          name=\"email\"\n          required\n          value={email}\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Password\n        <Input\n          type=\"password\"\n          name=\"password\"\n          required\n          value={password}\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\">\n        {isLoggingIn ? (\n          <Loader\n            height={'16'}\n            width={'16'}\n            colors={['#e3e3ee', '#e3e3ee']}\n            size={'s'}\n          />\n        ) : (\n          'Log In'\n        )}\n      </Button>\n    </Form>\n  );\n};\n\nexport default LoginForm;\n","import styled from 'styled-components';\nimport image from '../img/background/login-page.jpg';\n\nconst Container = styled.div`\n  display: block;\n  min-height: calc(95vh);\n  padding: 20px 32px;\n  background-image: linear-gradient(\n      to bottom,\n      rgb(210, 200, 200, 0.7),\n      rgb(215, 200, 200, 0.2)\n    ),\n    url(${image});\n  background-size: 100%;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 34px;\n  font-weight: 700;\n  line-height: 1.33;\n  margin-bottom: 20px;\n`;\n\nexport { Container, Title };\n","import LoginForm from '../components/LoginForm';\n\nimport { Container, Title } from './LoginStyles';\n\nconst Login = () => {\n  return (\n    <Container>\n      <Title>Login page</Title>\n      <LoginForm />\n    </Container>\n  );\n};\n\nexport default Login;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","dispatch","useDispatch","isLoggingIn","useSelector","selectIsLoggingIn","_useState","useState","email","password","_useState2","_slicedToArray","state","setState","handleChange","e","_e$currentTarget","currentTarget","name","value","prevState","_objectSpread","_defineProperty","handleLogIn","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","logIn","t0","console","log","stop","apply","arguments","_jsxs","onSubmit","preventDefault","children","_jsx","type","required","onChange","Loader","height","width","colors","size","Container","image","Title","LoginForm"],"sourceRoot":""}