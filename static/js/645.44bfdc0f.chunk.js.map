{"version":3,"file":"static/js/645.44bfdc0f.chunk.js","mappings":"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","sources":["redux/contacts & filter/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/ContactAdd/ContactAdd.jsx","components/ContactUpdate/ContactUpdate.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts.module.css?8552","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectItems = state => state.contacts.items;\nexport const selectFetchContactsIsLoading = state =>\n  state.contacts.isLoading.fetchContacts;\nexport const selectAddContactIsLoading = state =>\n  state.contacts.isLoading.addContact;\nexport const selectDeletedContactId = state =>\n  state.contacts.isLoading.deletedContactId;\nexport const selectUpdateContactIsLoading = state =>\n  state.contacts.isLoading.updateContact;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectItems, selectFilterValue],\n  (items, filter) => {\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import PropTypes from 'prop-types';\n\nimport Loader from '../Loader';\n\nimport css from './ContactForm.module.css';\n\nconst ContactForm = ({\n  name,\n  number,\n  handleChange,\n  handleSubmit,\n  isLoading,\n  buttonText,\n}) => {\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label} htmlFor=\"\">\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={css.label} htmlFor=\"\">\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        {isLoading ? (\n          <Loader\n            height={'16'}\n            width={'16'}\n            colors={['#e3e3ee', '#e3e3ee']}\n            size={'s'}\n          />\n        ) : (\n          buttonText\n        )}\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  buttonText: PropTypes.string.isRequired,\n};\n\nexport default ContactForm;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { addContact } from '../../redux/contacts & filter/operations';\nimport {\n  selectItems,\n  selectAddContactIsLoading,\n} from '../../redux/contacts & filter/selectors';\nimport ContactForm from '../ContactForm';\n\nconst ContactAdd = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectItems);\n  const isLoading = useSelector(selectAddContactIsLoading);\n  const [state, setState] = useState({ name: '', number: '' });\n  const { name, number } = state;\n  const buttonText = 'Add contact';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      items.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase().trim()\n      )\n    ) {\n      toast.warn(`${name} is already in your contacts`, {\n        position: 'top-right',\n        theme: 'colored',\n      });\n    } else if (items.some(contact => contact.number === number.trim())) {\n      toast.warn(`${number} is already in your contacts`, {\n        position: 'top-right',\n        theme: 'colored',\n      });\n    } else {\n      handleContactAddition();\n    }\n  };\n\n  const formReset = () => {\n    setState({ name: '', number: '' });\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    setState(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleContactAddition = async () => {\n    try {\n      await dispatch(addContact(state));\n      toast.success(`New contact \"${name}\" has been added successfully`, {\n        position: 'top-right',\n        theme: 'colored',\n      });\n      formReset();\n    } catch (rejectedValueOrSerializedError) {\n      console.log(rejectedValueOrSerializedError);\n    }\n  };\n\n  return (\n    <ContactForm\n      name={name}\n      number={number}\n      handleChange={handleChange}\n      handleSubmit={handleSubmit}\n      isLoading={isLoading}\n      buttonText={buttonText}\n    />\n  );\n};\n\nexport default ContactAdd;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { updateContact } from '../../redux/contacts & filter/operations';\nimport { selectUpdateContactIsLoading } from '../../redux/contacts & filter/selectors';\nimport ContactForm from '../ContactForm';\n\nconst ContactUpdate = ({ contactId, currentName, currentNumber, onSave }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectUpdateContactIsLoading);\n  const [state, setState] = useState({\n    id: contactId,\n    name: currentName,\n    number: currentNumber,\n  });\n  const { id, name, number } = state;\n  const buttonText = 'Update contact';\n  console.log(id);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleContactUpdate();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    setState(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleContactUpdate = async () => {\n    try {\n      await dispatch(updateContact(state));\n      toast.success(`Contact \"${name}\" has been updated successfully`, {\n        position: 'top-right',\n        theme: 'colored',\n      });\n      onSave();\n    } catch (rejectedValueOrSerializedError) {\n      console.log(rejectedValueOrSerializedError);\n    }\n  };\n\n  return (\n    <ContactForm\n      name={name}\n      number={number}\n      handleChange={handleChange}\n      handleSubmit={handleSubmit}\n      isLoading={isLoading}\n      buttonText={buttonText}\n    />\n  );\n};\n\nContactUpdate.propTypes = {\n  contactId: PropTypes.string.isRequired,\n  currentName: PropTypes.string.isRequired,\n  currentNumber: PropTypes.string.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n\nexport default ContactUpdate;\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__xTnIT\",\"content\":\"Modal_content__gGb69\"};","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport css from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={css.backdrop} onClick={handleBackdropClick}>\n      <div className={css.content}>{children}</div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"buttons\":\"ContactItem_buttons__Juk+z\",\"button\":\"ContactItem_button__IRFBz\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { deleteContact } from '../../redux/contacts & filter/operations';\nimport { selectDeletedContactId } from '../../redux/contacts & filter/selectors';\nimport ContactUpdate from 'components/ContactUpdate';\nimport Loader from '../Loader';\nimport Modal from '../Modal';\n\nimport css from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const deletedContactId = useSelector(selectDeletedContactId);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n\n  const handleContactDeletion = async () => {\n    try {\n      await dispatch(deleteContact(id));\n      toast.success(`Contact \"${name}\" has been deleted successfully`, {\n        position: 'top-right',\n        theme: 'colored',\n      });\n    } catch (rejectedValueOrSerializedError) {\n      console.log(rejectedValueOrSerializedError);\n    }\n  };\n\n  return (\n    <>\n      <li className={css.item}>\n        <p>\n          {name}: {number}\n        </p>\n        <div className={css.buttons}>\n          <button className={css.button} type=\"button\" onClick={toggleModal}>\n            Update\n          </button>\n          <button\n            className={css.button}\n            type=\"button\"\n            onClick={handleContactDeletion}\n          >\n            {deletedContactId === id ? (\n              <Loader\n                height={'16'}\n                width={'16'}\n                colors={['#e3e3ee', '#e3e3ee']}\n                size={'s'}\n              />\n            ) : (\n              'Delete'\n            )}\n          </button>\n        </div>\n      </li>\n      {isModalOpen && (\n        <Modal onClose={toggleModal}>\n          <ContactUpdate\n            contactId={id}\n            currentName={name}\n            currentNumber={number}\n            onSave={toggleModal}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactList_wrapper__VP-XU\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  selectFetchContactsIsLoading,\n  selectError,\n  selectFilteredContacts,\n} from '../../redux/contacts & filter/selectors';\nimport { fetchContacts } from '../../redux/contacts & filter/operations';\nimport ContactItem from '../ContactItem';\nimport Loader from '../Loader';\n\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectFetchContactsIsLoading);\n  const error = useSelector(selectError);\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ul className={css.wrapper}>\n        {isLoading && !error && (\n          <Loader\n            height={'60'}\n            width={'60'}\n            colors={['#383848', '#383848']}\n            size={'m'}\n          />\n        )}\n        {filteredContacts.length > 0 &&\n          filteredContacts.map(contact => (\n            <ContactItem\n              key={contact.id}\n              id={contact.id}\n              name={contact.name}\n              number={contact.number}\n            />\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Filter_wrapper__9Ksqy\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setFilter } from '../../redux/contacts & filter/filterSlice';\nimport { selectFilterValue } from '../../redux/contacts & filter/selectors';\n\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterValue);\n\n  const handleChange = e => {\n    const { value } = e.currentTarget;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <form className={css.wrapper}>\n      <label className={css.label}>\n        Find contacts by name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleChange}\n        />\n      </label>\n    </form>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Contacts_section__lhdxY\",\"container\":\"Contacts_container__TJkHA\",\"service\":\"Contacts_service__XBWWt\",\"title\":\"Contacts_title__HJPSk\"};","import ContactAdd from '../components/ContactAdd';\nimport ContactList from '../components/ContactList';\nimport Filter from '../components/Filter';\n\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n  return (\n    <section className={css.section}>\n      <h1 className={css.title}>Contacts</h1>\n      <div className={css.container}>\n        <div className={css.service}>\n          <ContactAdd />\n          <Filter />\n        </div>\n        <ContactList />\n      </div>\n    </section>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectItems","state","contacts","items","selectFetchContactsIsLoading","isLoading","fetchContacts","selectAddContactIsLoading","addContact","selectDeletedContactId","deletedContactId","selectUpdateContactIsLoading","updateContact","selectError","error","selectFilterValue","filter","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","_ref","number","handleChange","handleSubmit","buttonText","_jsxs","className","css","onSubmit","children","htmlFor","_jsx","type","pattern","title","required","value","onChange","Loader","height","width","colors","size","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setState","handleContactAddition","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","toast","concat","position","theme","t0","console","log","stop","apply","arguments","ContactForm","e","_e$currentTarget","currentTarget","prevState","_objectSpread","_defineProperty","preventDefault","some","trim","contactId","currentName","currentNumber","onSave","id","handleContactUpdate","_ref2","modalRoot","document","querySelector","onClose","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","onClick","event","target","isModalOpen","setIsModalOpen","toggleModal","handleContactDeletion","deleteContact","_Fragment","Modal","ContactUpdate","filteredContacts","length","map","ContactItem","setFilter","ContactAdd","Filter","ContactList"],"sourceRoot":""}