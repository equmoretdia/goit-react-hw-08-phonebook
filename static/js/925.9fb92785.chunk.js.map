{"version":3,"file":"static/js/925.9fb92785.chunk.js","mappings":"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","sources":["redux/contacts & filter/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/LoaderInButton/LoaderInButton.module.css?299b","components/LoaderInButton/LoaderInButton.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/ContactAdd/ContactAdd.jsx","components/ContactUpdate/ContactUpdate.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts.module.css?8552","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectItems = state => state.contacts.items;\nexport const selectFetchContactsIsLoading = state =>\n  state.contacts.isLoading.fetchContacts;\nexport const selectAddContactIsLoading = state =>\n  state.contacts.isLoading.addContact;\nexport const selectDeletedContactId = state =>\n  state.contacts.isLoading.deletedContactId;\nexport const selectUpdateContactIsLoading = state =>\n  state.contacts.isLoading.updateContact;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectItems, selectFilterValue],\n  (items, filter) => {\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"LoaderInButton_wrapper__+RL-G\"};","import { Hourglass } from 'react-loader-spinner';\n\nimport css from './LoaderInButton.module.css';\n\nconst LoaderInButton = () => {\n  return (\n    <div className={css.wrapper}>\n      <Hourglass\n        visible={true}\n        height=\"18\"\n        width=\"18\"\n        ariaLabel=\"hourglass-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        colors={['#e3e3ee', '#e3e3ee']}\n      />\n    </div>\n  );\n};\n\nexport default LoaderInButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import PropTypes from 'prop-types';\n\nimport LoaderInButton from '../LoaderInButton';\n\nimport css from './ContactForm.module.css';\n\nconst ContactForm = ({\n  name,\n  number,\n  handleChange,\n  handleSubmit,\n  isLoading,\n  buttonText,\n}) => {\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label} htmlFor=\"\">\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={css.label} htmlFor=\"\">\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        {isLoading ? <LoaderInButton /> : buttonText}\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  buttonText: PropTypes.string.isRequired,\n};\n\nexport default ContactForm;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { addContact } from '../../redux/contacts & filter/operations';\nimport {\n  selectItems,\n  selectAddContactIsLoading,\n} from '../../redux/contacts & filter/selectors';\nimport ContactForm from '../ContactForm';\n\nconst ContactAdd = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectItems);\n  const isLoading = useSelector(selectAddContactIsLoading);\n  const [state, setState] = useState({ name: '', number: '' });\n  const { name, number } = state;\n  const buttonText = 'Add contact';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      items.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase().trim()\n      )\n    ) {\n      toast.warn(`${name} is already in your contacts`, {\n        position: 'top-right',\n        theme: 'colored',\n      });\n    } else if (items.some(contact => contact.number === number.trim())) {\n      toast.warn(`${number} is already in your contacts`, {\n        position: 'top-right',\n        theme: 'colored',\n      });\n    } else {\n      handleContactAddition();\n    }\n  };\n\n  const formReset = () => {\n    setState({ name: '', number: '' });\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    setState(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleContactAddition = async () => {\n    try {\n      await dispatch(addContact(state));\n      toast.success(`New contact \"${name}\" has been added successfully`, {\n        position: 'top-right',\n        theme: 'colored',\n      });\n      formReset();\n    } catch (rejectedValueOrSerializedError) {\n      console.log(rejectedValueOrSerializedError);\n    }\n  };\n\n  return (\n    <ContactForm\n      name={name}\n      number={number}\n      handleChange={handleChange}\n      handleSubmit={handleSubmit}\n      isLoading={isLoading}\n      buttonText={buttonText}\n    />\n  );\n};\n\nexport default ContactAdd;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { updateContact } from '../../redux/contacts & filter/operations';\nimport { selectUpdateContactIsLoading } from '../../redux/contacts & filter/selectors';\nimport ContactForm from '../ContactForm';\n\nconst ContactUpdate = ({ contactId, currentName, currentNumber, onSave }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectUpdateContactIsLoading);\n  const [state, setState] = useState({\n    id: contactId,\n    name: currentName,\n    number: currentNumber,\n  });\n  const { id, name, number } = state;\n  const buttonText = 'Update contact';\n  console.log(id);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleContactUpdate();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    setState(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const handleContactUpdate = async () => {\n    try {\n      await dispatch(updateContact(state));\n      toast.success(`Contact \"${name}\" has been updated successfully`, {\n        position: 'top-right',\n        theme: 'colored',\n      });\n      onSave();\n    } catch (rejectedValueOrSerializedError) {\n      console.log(rejectedValueOrSerializedError);\n    }\n  };\n\n  return (\n    <ContactForm\n      name={name}\n      number={number}\n      handleChange={handleChange}\n      handleSubmit={handleSubmit}\n      isLoading={isLoading}\n      buttonText={buttonText}\n    />\n  );\n};\n\nContactUpdate.propTypes = {\n  contactId: PropTypes.string.isRequired,\n  currentName: PropTypes.string.isRequired,\n  currentNumber: PropTypes.string.isRequired,\n  onSave: PropTypes.func.isRequired,\n};\n\nexport default ContactUpdate;\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__xTnIT\",\"content\":\"Modal_content__gGb69\"};","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport css from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={css.backdrop} onClick={handleBackdropClick}>\n      <div className={css.content}>{children}</div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"buttons\":\"ContactItem_buttons__Juk+z\",\"button\":\"ContactItem_button__IRFBz\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { deleteContact } from '../../redux/contacts & filter/operations';\nimport { selectDeletedContactId } from '../../redux/contacts & filter/selectors';\nimport ContactUpdate from 'components/ContactUpdate';\nimport LoaderInButton from '../LoaderInButton';\nimport Modal from '../Modal';\n\nimport css from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const deletedContactId = useSelector(selectDeletedContactId);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n\n  const handleContactDeletion = async () => {\n    try {\n      await dispatch(deleteContact(id));\n      toast.success(`Contact \"${name}\" has been deleted successfully`, {\n        position: 'top-right',\n        theme: 'colored',\n      });\n    } catch (rejectedValueOrSerializedError) {\n      console.log(rejectedValueOrSerializedError);\n    }\n  };\n\n  return (\n    <>\n      <li className={css.item}>\n        <p>\n          {name}: {number}\n        </p>\n        <div className={css.buttons}>\n          <button className={css.button} type=\"button\" onClick={toggleModal}>\n            Update\n          </button>\n          <button\n            className={css.button}\n            type=\"button\"\n            onClick={handleContactDeletion}\n          >\n            {deletedContactId === id ? <LoaderInButton /> : 'Delete'}\n          </button>\n        </div>\n      </li>\n      {isModalOpen && (\n        <Modal onClose={toggleModal}>\n          <ContactUpdate\n            contactId={id}\n            currentName={name}\n            currentNumber={number}\n            onSave={toggleModal}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactList_wrapper__VP-XU\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  selectFetchContactsIsLoading,\n  selectError,\n  selectFilteredContacts,\n} from '../../redux/contacts & filter/selectors';\nimport { fetchContacts } from '../../redux/contacts & filter/operations';\nimport ContactItem from '../ContactItem';\nimport Loader from '../Loader';\n\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectFetchContactsIsLoading);\n  const error = useSelector(selectError);\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ul className={css.wrapper}>\n        {isLoading && !error && <Loader />}\n        {filteredContacts.length > 0 &&\n          filteredContacts.map(contact => (\n            <ContactItem\n              key={contact.id}\n              id={contact.id}\n              name={contact.name}\n              number={contact.number}\n            />\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Filter_wrapper__9Ksqy\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setFilter } from '../../redux/contacts & filter/filterSlice';\nimport { selectFilterValue } from '../../redux/contacts & filter/selectors';\n\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilterValue);\n\n  const handleChange = e => {\n    const { value } = e.currentTarget;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <form className={css.wrapper}>\n      <label className={css.label}>\n        Find contacts by name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleChange}\n        />\n      </label>\n    </form>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Contacts_section__lhdxY\",\"container\":\"Contacts_container__TJkHA\",\"service\":\"Contacts_service__XBWWt\",\"title\":\"Contacts_title__HJPSk\"};","import ContactAdd from '../components/ContactAdd';\nimport ContactList from '../components/ContactList';\nimport Filter from '../components/Filter';\n\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n  return (\n    <section className={css.section}>\n      <h1 className={css.title}>Contacts</h1>\n      <div className={css.container}>\n        <div className={css.service}>\n          <ContactAdd />\n          <Filter />\n        </div>\n        <ContactList />\n      </div>\n    </section>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectItems","state","contacts","items","selectFetchContactsIsLoading","isLoading","fetchContacts","selectAddContactIsLoading","addContact","selectDeletedContactId","deletedContactId","selectUpdateContactIsLoading","updateContact","selectError","error","selectFilterValue","filter","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","_jsx","className","css","children","Hourglass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","_ref","number","handleChange","handleSubmit","buttonText","_jsxs","onSubmit","htmlFor","type","pattern","title","required","value","onChange","LoaderInButton","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setState","handleContactAddition","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","toast","concat","position","theme","t0","console","log","stop","apply","arguments","ContactForm","e","_e$currentTarget","currentTarget","prevState","_objectSpread","_defineProperty","preventDefault","some","trim","contactId","currentName","currentNumber","onSave","id","handleContactUpdate","_ref2","modalRoot","document","querySelector","onClose","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","onClick","event","target","isModalOpen","setIsModalOpen","toggleModal","handleContactDeletion","deleteContact","_Fragment","Modal","ContactUpdate","filteredContacts","Loader","length","map","ContactItem","setFilter","ContactAdd","Filter","ContactList"],"sourceRoot":""}